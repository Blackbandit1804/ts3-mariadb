name: Build & Push to Docker Hub

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "V*" ]   # bei v1.2.3 zusÃ¤tzlich :v1.2.3 und :1.2.3
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare tags
        id: prep
        run: |
          IMAGE="blackbandit1804/teamspeak-mariadb"
          # immer latest
          TAGS_CSV="${IMAGE}:latest"
          # bei Git-Tag zusÃ¤tzlich :vX.Y.Z und :X.Y.Z
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            RAW="${GITHUB_REF_NAME}"   # z.B. v1.0.0
            CLEAN="${RAW#v}"           # 1.0.0
            TAGS_CSV="${TAGS_CSV},${IMAGE}:${RAW},${IMAGE}:${CLEAN}"
          fi
          # Outputs: CSV (fÃ¼r build-push) und SPACE (fÃ¼r Schleifen)
          echo "tags=${TAGS_CSV}" >> "$GITHUB_OUTPUT"
          echo "tags_space=$(echo "${TAGS_CSV}" | tr ',' ' ')" >> "$GITHUB_OUTPUT"

      - name: Build & Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: "Healthcheck: tags available on Docker Hub"
        shell: bash
        env:
          TAGS: ${{ steps.prep.outputs.tags_space }}
        run: |
          set -euo pipefail
          for TAG in $TAGS; do
            echo "ðŸ”Ž Checking availability for: $TAG"
            docker buildx imagetools inspect "$TAG" >/dev/null
            echo "âœ… OK: $TAG found"
          done
          echo "ðŸŽ‰ All tags are available on Docker Hub."

